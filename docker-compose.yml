networks:
  backend-network: {}
  clickhouse-network: {}
  demo-network: {}
  frontend-network: {}
  mongo-network: {}
  postgresdb-network: {}
  rabbitmq-network: {}
  recognition-network: {}
services:
  clickhouse:
    hostname: clickhouse-server
    image: yandex/clickhouse-server:19.13.5.44
    networks:
      clickhouse-network: {}
    ports:
    - 8123:8123/tcp
    - 9000:9000/tcp
  demo-api:
    depends_on:
      postgresdb:
        condition: service_started
    environment:
      ConnectionStrings__postgres: Server=postgresdb;Port=5432;Database=Demo;User
        Id=recognition;Password=2sCRel1yuP;
      ENABLE_LOGGING: "true"
      ENVIRONMENT: Production
      MtfApi:url: http://recognition-mtf-webapi:1743
      PersonFinderApi:url: http://recognition-personfinder-webapi:8080
      Serilog:MinimumLevel:Override:Microsoft: Warning
      Serilog:MinimumLevel:Override:System: Warning
      Serilog__MinimumLevel__Default: Debug
      Serilog__WriteTo__0__Name: Console
      StreamCreationService:PublicFaceRecognitionApi: http://recognition-webapi/
      StreamCreationService:callbackUrl: http://demo-event-api/event
    image: faceterteam/recognition.demo.webapi:v1.0.16
    networks:
      backend-network: {}
      demo-network: {}
      frontend-network: {}
      postgresdb-network: {}
      recognition-network: {}
  demo-client:
    environment:
      VUE_APP_API_ENDPOINT: http://localhost/api/v1/
    image: faceterteam/recognition.demo.webclient:v1.1.1
    networks:
      backend-network: {}
      demo-network: {}
      frontend-network: {}
  demo-event-api:
    depends_on:
      postgresdb:
        condition: service_started
    environment:
      ConnectionStrings__RecognitionEvents: Server=postgresdb;Port=5432;Database=Demo;User
        Id=recognition;Password=2sCRel1yuP;
      ENABLE_LOGGING: "true"
      ENVIRONMENT: Production
      ExtApiConfiguration:MtfApiUrl: http://recognition-mtf-webapi:1743
      ExtApiConfiguration:PublicApiUrl: http://recognition-webapi
      PublicApiConfiguration:PublicApiUrl: http://recognition-webapi/
      Serilog:MinimumLevel:Override:Microsoft: Warning
      Serilog:MinimumLevel:Override:System: Warning
      Serilog__MinimumLevel__Default: Debug
      Serilog__WriteTo__0__Name: Console
    image: faceterteam/recognition.event.api:v1.0.10
    networks:
      backend-network: {}
      demo-network: {}
      postgresdb-network: {}
      recognition-network: {}
    volumes:
    - ../logs/demo-event-api:/logs
  mongo:
    image: mongo:4.2.0
    networks:
      mongo-network: {}
    ports:
    - 27017:27017/tcp
  nginx:
    depends_on:
      demo-api:
        condition: service_started
      demo-client:
        condition: service_started
      recognition-webapi:
        condition: service_started
    image: nginx:1.15.6-alpine
    networks:
      frontend-network: {}
    ports:
    - 80:80/tcp
    restart: always
    volumes:
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    - ./nginx/locations/demo.conf:/etc/nginx/conf.d/locations/demo.conf
    - ./nginx/locations/recognition.conf:/etc/nginx/conf.d/locations/recognition.conf
    - ./nginx/upstreams/demo.conf:/etc/nginx/conf.d/upstreams/demo.conf
    - ./nginx/upstreams/recognition.conf:/etc/nginx/conf.d/upstreams/recognition.conf
  postgresdb:
    environment:
      PGDATA: /var/lib/postgresql/data/recognition
      POSTGRES_DB: Demo
      POSTGRES_PASSWORD: 2sCRel1yuP
      POSTGRES_USER: recognition
    image: postgres:11.1-alpine
    networks:
      postgresdb-network: {}
    ports:
    - 5432:5432/tcp
    volumes:
    - ./postgresdb/postgresql.conf:/var/etc/postgresql/postgresql.conf
    - ${POSTGRES_LOG_DIR:-/var/log/recognition}/postgresql/:/var/log/postgresql
    - ${POSTGRES_DATA_DIR:-/var/lib/recognition}/postgresql/:/var/lib/postgresql/data
  rabbitmq:
    image: rabbitmq:3.7.8-management
    networks:
      rabbitmq-network: {}
    ports:
    - 5672:5672/tcp
    - 15672:15672/tcp
  recognition-detector:
    depends_on:
      clickhouse:
        condition: service_started
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      PERSONFINDER_MONGO_URI: mongodb://mongo:27017
      PYTHONPATH: /caffe/python
      RECOGNITION_DECODER_MAX_QUEUE_SIZE: '5'
      RECOGNITION_DECODER_MAX_QUEUE_SIZE_RAW_ARRAY: '40'
      RECOGNITION_DETECTOR_BATCH_SIZE: '20'
      RECOGNITION_DETECTOR_THRESHOLD: '0.45'
      RECOGNITION_STREAM_RETRY_TIMEOUT: '5'
      RECOGNITION_IMAGE_STORAGE_HOST: clickhouse
      RECOGNITION_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_PLAYLIST_OFFSET: '10'
      RECOGNITION_PM_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_RABBITMQ_HOST: rabbitmq
      RECOGNITION_RABBITMQ_PREFETCH_COUNT: '20'
    image: faceterteam/recognition.detector.worker:v1.0.17
    mem_limit: 4gb
    memswap_limit: 2gb
    networks:
      backend-network: {}
      clickhouse-network: {}
      mongo-network: {}
      rabbitmq-network: {}
      recognition-network: {}
    oom_kill_disable: true
    ports:
    - 9989:22/tcp
    runtime: nvidia
    volumes:
    - /docker-data/recognition/detector/logs:/app/logs:rw
  recognition-feature-extractor:
    depends_on:
      clickhouse:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      PYTHONPATH: /caffe/python
      RECOGNITION_FEATURE_EXTRACTOR_BATCH_SIZE: '3'
      RECOGNITION_FE_RPC_ROUTING_KEY: FeatureExtractor.Task
      RECOGNITION_IMAGE_STORAGE_HOST: clickhouse
      RECOGNITION_RABBITMQ_HOST: rabbitmq
      RECOGNITION_RABBITMQ_PREFETCH_COUNT: '1'
    image: faceterteam/recognition.featureextractor.worker:v1.0.4
    networks:
      backend-network: {}
      clickhouse-network: {}
      rabbitmq-network: {}
      recognition-network: {}
    ports:
    - 9999:9999/tcp
    runtime: nvidia
  recognition-mtf-webapi:
    environment:
      PYTHONPATH: /caffe/python
      RECOGNITION_MTF_BATCH_SIZE: '1'
    image: faceterteam/mtf.webapi:v1.0.6
    mem_limit: 6gb
    memswap_limit: 4gb
    mem_swappiness: 60
    networks:
      backend-network: {}
    ports:
    - 1743:1743/tcp
    runtime: nvidia
  recognition-person-storage:
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      PERSONFINDER_MONGO_URI: mongodb://mongo:27017
      RECOGNITION_CACHE_SIZE: '50'
      RECOGNITION_DISTANCE_THRESHOLD: '0.45'
      RECOGNITION_ERROR_ROUTING_KEY: PersonStorageError
      RECOGNITION_INPUT_ROUTING_KEY: MutationVectorEvent
      RECOGNITION_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_OUTPUT_ROUTING_KEY: NewVectorEvent
      RECOGNITION_PM_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_RABBITMQ_HOST: rabbitmq
    image: faceterteam/recognition.personstorage:v1.0.9
    networks:
      backend-network: {}
      mongo-network: {}
      rabbitmq-network: {}
      recognition-network: {}
  recognition-personfinder-webapi:
    depends_on:
      mongo:
        condition: service_started
    environment:
      PERSONFINDER_DETECTOR_THRESHOLD: '0.9'
      PERSONFINDER_FEATURE_EXTRACTOR_URI: http://recognition-feature-extractor:9999
      PERSONFINDER_MONGO_URI: mongodb://mongo:27017
      RECOGNITION_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_PM_MONGO_HOST: mongodb://mongo:27017
    image: faceterteam/recognition.personfinder:v1.0.2
    networks:
      backend-network: {}
      mongo-network: {}
      recognition-network: {}
    ports:
    - 9123:8080/tcp
  recognition-project-manager-worker:
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
      recognition-scorer:
        condition: service_started
    environment:
      ConnectionStrings:MongoDb: mongodb://mongo:27017/recognition_public_api
      ENABLE_LOGGING: "true"
      ENVIRONMENT: Production
      RabbitMq__host: rabbitmq
      RabbitMq__uri: amqp://rabbitmq/
    image: faceterteam/recognition.projectmanager.worker:v1.0.6
    networks:
      backend-network: {}
      mongo-network: {}
      rabbitmq-network: {}
      recognition-network: {}
  recognition-scorer:
    container_name: recognition-scorer
    depends_on:
      clickhouse:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      PYTHONPATH: /caffe/python
      RECOGNITION_IMAGE_STORAGE_HOST: clickhouse
      RECOGNITION_IMAGE_TABLE_TTL: '3'
      RECOGNITION_RABBITMQ_HOST: rabbitmq
      RECOGNITION_RABBITMQ_PREFETCH_COUNT: '1'
      RECOGNITION_SCORER_BATCH_REDUCE_MIN_SIZE: '2'
    image: faceterteam/recognition.scorer.worker:v1.0.13
    networks:
      backend-network: {}
      clickhouse-network: {}
      rabbitmq-network: {}
      recognition-network: {}
    runtime: nvidia
    volumes:
    - /docker-data/recognition/scorer/logs:/app/logs:rw
  recognition-tracklet:
    depends_on:
      clickhouse:
        condition: service_started
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      PERSONFINDER_MONGO_URI: mongodb://mongo:27017
      RECOGNITION_CALLBACK_REQUEST_TIMEOUT: '5'
      RECOGNITION_FEATURE_EXTRACTOR_HOST: http://recognition-feature-extractor:9999
      RECOGNITION_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_PM_DISTANCE_THRESHOLD: '0.45'
      RECOGNITION_PM_DROP_TABLES_EXPIRE_PERIOD: '15200'
      RECOGNITION_PM_IMAGE_STORAGE_HOST: clickhouse
      RECOGNITION_PM_MONGO_HOST: mongodb://mongo:27017
      RECOGNITION_PM_PROBABLY_DISTANCE_THRESHOLD: '0.6'
      RECOGNITION_PM_SCORE_LOWER_THRESHOLD: '0.005'
      RECOGNITION_PM_SCORE_THRESHOLD: '0.7'
      RECOGNITION_RABBITMQ_HOST: rabbitmq
      RECOGNITION_RABBITMQ_PREFETCH_COUNT: '1'
      RECOGNITION_TRACKLET_INPUT_ROUTING_KEY: ScoredBatchEvent
    image: faceterteam/recognition.tracklet.worker:v1.0.33
    networks:
      backend-network: {}
      clickhouse-network: {}
      mongo-network: {}
      rabbitmq-network: {}
      recognition-network: {}
    volumes:
    - /tmp/Resources:/app/Resources:rw
  recognition-webapi:
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      ConnectionStrings:MongoDb: mongodb://mongo:27017/recognition_public_api
      ENABLE_LOGGING: "true"
      ENVIRONMENT: Production
      RabbitMq__host: rabbitmq
      RabbitMq__uri: amqp://rabbitmq/
    image: faceterteam/recognition.public.webapi:v1.0.8
    networks:
      backend-network: {}
      frontend-network: {}
      mongo-network: {}
      rabbitmq-network: {}
      recognition-network: {}
version: '2.4'